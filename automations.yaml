#####################################################################
#                                                                   #    
# THIS FILE IS NO LONGER USED, SPLIT INTO MULTIPLE YAML FILES, SEE: #
#                        /automations/ FOLDER                       #
#                                                                   #
#####################################################################

###########################################
##                MOTION                  #
###########################################
#
## Automation motion hallway
#  - id: 'motionhallwayfull'
#    alias: "Upstairs hallway - turn on at night, full"
#    initial_state: 'on'
#    trigger:
#      - platform: state
#        entity_id: binary_sensor.hallway_motion
#        from: 'off'
#        to: 'on'
#    condition:
#      condition: and
#      conditions:
#        - condition: numeric_state
#          entity_id: sun.sun
#          value_template: '{{ state.attributes.elevation }}'
#          below: 0
#        - condition: time
#          before: '21:30:00'
#    action:
#      - service: light.turn_on
#        entity_id: light.hallway_lights
#
## Automation motion downstairs hallway
#  - id: 'motionhallwaydown'
#    alias: "Upstairs hallway - turn on at night, full, from downstairs"
#    initial_state: 'on'
#    trigger:
#      - platform: state
#        entity_id: binary_sensor.downstairs_hallway_motion
#        from: 'off'
#        to: 'on'
#    condition:
#      condition: and
#      conditions:
#        - condition: numeric_state
#          entity_id: sun.sun
#          value_template: '{{ state.attributes.elevation }}'
#          below: 0
#        - condition: time
#          before: '21:30:00'
#    action:
#      - service: light.turn_on
#        entity_id: light.hallway_lights
#
## Automation motion hallway dimmed
#  - id: 'motionhallwaydimmed'
#    alias: "Upstairs hallway - turn on at night, dimmed"
#    initial_state: 'on'
#    trigger:
#      - platform: state
#        entity_id: binary_sensor.hallway_motion
#        from: 'off'
#        to: 'on'
#    condition:
#        condition: or
#        conditions:
#          - condition: time
#            after: '21:30:00'
#          - condition: time
#            before: '07:00:00'
#    action:
#      - service: light.turn_on
#        entity_id: light.hallway_lights
#        data:
#          brightness: 100
#          kelvin: 2700
#
## Automation motion hallway dimmed
#  - id: 'motionhallwaydimmed'
#    alias: "Upstairs hallway - turn on at night, dimmed, from downstairs"
#    initial_state: 'on'
#    trigger:
#      - platform: state
#        entity_id: binary_sensor.hallway_motion
#        from: 'off'
#        to: 'on'
#    condition:
#        condition: or
#        conditions:
#          - condition: time
#            after: '21:30:00'
#          - condition: time
#            before: '07:00:00'
#    action:
#      - service: light.turn_on
#        entity_id: light.hallway_lights
#        data:
#          brightness: 100
#          kelvin: 2700
#
## Automation motion hallway off
#  - id: 'motionhallwayoff'
#    alias: "Upstairs hallway - turn off at night"
#    initial_state: 'on'
#    trigger:
#      - platform: state
#        entity_id: binary_sensor.hallway_motion
#        from: 'on'
#        to: 'off'
#        for: '00:00:30'
#    condition:
#      - condition: state
#        state: 'on'
#        entity_id: light.hallway_lights
#    action:
#      - service: light.turn_off
#        entity_id: light.hallway_lights
#
## Automation motion hallway off from downstairs
#  - id: 'motionhallwayoffdownstairs'
#    alias: "Upstairs hallway - turn off from downstairs"
#    initial_state: 'on'
#    trigger:
#      - platform: state
#        entity_id: binary_sensor.downstairs_hallway_motion
#        from: 'on'
#        to: 'off'
#        for: '00:00:10'
#    condition:
#        condition: and
#        conditions:
#          - condition: state
#            state: 'on'
#            entity_id: light.hallway_lights
#          - condition: template
#            value_template: '{{ as_timestamp(now()) - as_timestamp(states.automation.upstairs_hallway__turn_on_at_night_full.attributes.last_triggered) | int > 60 }}'
#          - condition: template
#            value_template: '{{ as_timestamp(now()) - as_timestamp(states.automation.upstairs_hallway__turn_on_at_night_dimmed.attributes.last_triggered) | int > 60 }}'
#    action:
#      - service: light.turn_off
#        entity_id: light.hallway_lights
#
###########################################
##                 ALARM                  #
###########################################
#
## Alarm Automation - Trigger alarm whilst away     
#  - id: 'alarmaway'
#    alias: 'Trigger alarm while armed away'
#    trigger:
#      - platform: state
#        entity_id: binary_sensor.downstairs_hallway_motion
#        from: 'off'
#        to: 'on'
#      - platform: state
#        entity_id: binary_sensor.front_room_motion
#        from: 'off'
#        to: 'on'
#      - platform: state
#        entity_id: binary_sensor.living_room_motion
#        from: 'off'
#        to: 'on'
#      - platform: state
#        entity_id: binary_sensor.kitchen_motion
#        from: 'off'
#        to: 'on'
#      - platform: state
#        entity_id: binary_sensor.hallway_motion
#        from: 'off'
#        to: 'on'
#    condition:
#      - condition: state
#        entity_id: alarm_control_panel.home_alarm
#        state: armed_away
#    action:
#      service: alarm_control_panel.alarm_trigger
#      entity_id: alarm_control_panel.home_alarm
#
## Alarm Automation - Trigger alarm whilst at home (e.g. in bed/upstairs)
#  - id: 'alarmhome'
#    alias: 'Trigger alarm while armed at home'
#    trigger:
#      - platform: state
#        entity_id: binary_sensor.downstairs_hallway_motion
#        from: 'off'
#        to: 'on'
#      - platform: state
#        entity_id: binary_sensor.front_room_motion
#        from: 'off'
#        to: 'on'
#      - platform: state
#        entity_id: binary_sensor.living_room_motion
#        from: 'off'
#        to: 'on'
#      - platform: state
#        entity_id: binary_sensor.kitchen_motion
#        from: 'off'
#        to: 'on'
#    condition:
#      - condition: state
#        entity_id: alarm_control_panel.home_alarm
#        state: armed_home
#    action:
#      service: alarm_control_panel.alarm_trigger
#      entity_id: alarm_control_panel.home_alarm
#
## Alarm Automation - Alarm Triggered Notification
#  - id: 'alarmnotification'
#    alias: 'Send notification when alarm triggered'
#    trigger:
#      - platform: state
#        entity_id: alarm_control_panel.home_alarm
#        to: 'triggered'
#    action:
#      - service: notify.telegram_notification
#        data:
#          message: "ALARM! The alarm has been triggered"
#      - service: notify.telegram_notification_kelly
#        data:
#          message: "ALARM! The alarm has been triggered"
#      - service: media_player.sonos_unjoin
#        entity_id:
#         - media_player.front_room
#         - media_player.kitchen_room
#         - media_player.living_room
#         - media_player.master_bedroom
#         - media_player.bathroom
#      - service: media_player.sonos_join
#        data:
#          master: media_player.bathroom
#        entity_id:
#         - media_player.front_room
#         - media_player.kitchen_room
#         - media_player.living_room
#         - media_player.master_bedroom
#      - service: media_player.volume_set
#        entity_id:
#         - media_player.front_room
#         - media_player.kitchen_room
#         - media_player.living_room
#         - media_player.master_bedroom
#         - media_player.bathroom
#        data:
#          volume_level: 0.6
#      - service: media_player.select_source
#        entity_id: media_player.bathroom
#        data:
#          source: 'Burglar Alarm Horn Siren'
#
## Alarm Automation - Alarm Pending Notification
#  - id: 'alarmpendingnotification'
#    alias: 'Send notification when alarm pending'
#    trigger:
#      - platform: state
#        entity_id: alarm_control_panel.home_alarm
#        to: 'pending'
#    action:
#      - service: notify.telegram_notification
#        data:
#          message: "Pending alarm, please disable if not heading out."
#          data:
#            inline_keyboard:
#              - "Disarm:/disarm"
#      - service: notify.telegram_notification_kelly
#        data:
#          message: "Pending alarm, please disable if not heading out."
#          data:
#            inline_keyboard:
#              - "Disarm:/disarm"
#      - service: media_player.sonos_unjoin
#        entity_id:
#         - media_player.front_room
#         - media_player.kitchen_room
#         - media_player.living_room
#         - media_player.master_bedroom
#         - media_player.bathroom
#      - service: media_player.sonos_join
#        data:
#          master: media_player.bathroom
#        entity_id:
#         - media_player.front_room
#         - media_player.kitchen_room
#         - media_player.living_room
#         - media_player.master_bedroom
#      - service: media_player.volume_set
#        entity_id:
#         - media_player.front_room
#         - media_player.kitchen_room
#         - media_player.living_room
#         - media_player.master_bedroom
#         - media_player.bathroom
#        data:
#          volume_level: 0.1
#      - service: media_player.select_source
#        entity_id: media_player.bathroom
#        data:
#          source: 'Digital Beeping'
#      - delay: '00:00:10'
#      - service: media_player.media_stop
#        entity_id: media_player.bathroom
#
## Alarm Automation - Alarm Disarmed Notification
#  - id: 'alarmdisarmednotification'
#    alias: 'Send notification when alarm is disarmed'
#    trigger:
#      - platform: state
#        entity_id: alarm_control_panel.home_alarm
#        to: 'disarmed'
#    action:
#      - service: notify.telegram_notification
#        data:
#          message: "Alarm disarmed."
#          data:
#            inline_keyboard:
#              - "Arm Away:/armaway, Arm Home:/armhome"
#      - service: notify.telegram_notification_kelly
#        data:
#          message: "Alarm disarmed."
#          data:
#            inline_keyboard:
#              - "Arm Away:/armaway, Arm Home:/armhome"
#      - service: media_player.media_stop
#        entity_id: media_player.bathroom
#
## Alarm Automation - Alarm Disarmed Notification
#  - id: 'alarmdisarmednotification'
#    alias: 'Send notification when alarm is disarmed'
#    trigger:
#      - platform: state
#        entity_id: alarm_control_panel.home_alarm
#        to: 'armed_away'
#    action:
#      - service: notify.telegram_notification
#        data:
#          message: "Alarm armed - Entire house."
#      - service: notify.telegram_notification_kelly
#        data:
#          message: "Alarm armed - Entire house."
#
## Alarm Automation - Alarm Armed Home Notification
#  - id: 'alarmarmedhomenotification'
#    alias: 'Send notification when alarm is disarmed'
#    trigger:
#      - platform: state
#        entity_id: alarm_control_panel.home_alarm
#        to: 'armed_home'
#    action:
#      - service: notify.telegram_notification
#        data:
#          message: "Alarm armed - Downstairs only."
#      - service: notify.telegram_notification_kelly
#        data:
#          message: "Alarm armed - Downstairs only."
#
#
## Alarm Automation - Disarm from Telegram
#  - id: 'alarmdisarmfromtelegram'
#    alias: 'Disarm alarm from Telegram'
#    trigger:
#      - platform: event
#        event_type: telegram_command
#        event_data:
#          command: '/disarm'
#    action:
#      - service: alarm_control_panel.alarm_disarm
#        data:
#          entity_id: alarm_control_panel.home_alarm
#          code: !secret alarm_code
#
## Alarm Automation - Arm home alarm from Telegram
#  - id: 'alarmarmhomefromtelegram'
#    alias: 'Arm alarm home from Telegram'
#    trigger:
#      - platform: event
#        event_type: telegram_command
#        event_data:
#          command: '/armhome'
#    action:
#      - service: alarm_control_panel.alarm_arm_home
#        data:
#          entity_id: alarm_control_panel.home_alarm
#          code: !secret alarm_code
#
## Alarm Automation - Arm away alarm from Telegram
#  - id: 'alarmarmawayfromtelegram'
#    alias: 'Arm alarm away from Telegram'
#    trigger:
#      - platform: event
#        event_type: telegram_command
#        event_data:
#          command: '/armaway'
#    action:
#      - service: alarm_control_panel.alarm_arm_away
#        data:
#          entity_id: alarm_control_panel.home_alarm
#          code: !secret alarm_code
#
## Alarm Automation - Disarm from Telegram
#  - id: 'alarmdisarmfromtelegramcb'
#    alias: 'Disarm alarm from Telegram'
#    trigger:
#      - platform: event
#        event_type: telegram_callback
#        event_data:
#          data: '/disarm'
#    action:
#      - service: alarm_control_panel.alarm_disarm
#        data:
#          entity_id: alarm_control_panel.home_alarm
#          code: !secret alarm_code
#
## Alarm Automation - Arm home alarm from Telegram
#  - id: 'alarmarmhomefromtelegramcb'
#    alias: 'Arm alarm home from Telegram'
#    trigger:
#      - platform: event
#        event_type: telegram_callback
#        event_data:
#          data: '/armhome'
#    action:
#      - service: alarm_control_panel.alarm_arm_home
#        data:
#          entity_id: alarm_control_panel.home_alarm
#          code: !secret alarm_code
#
## Alarm Automation - Arm away alarm from Telegram
#  - id: 'alarmarmawayfromtelegramcb'
#    alias: 'Arm alarm away from Telegram'
#    trigger:
#      - platform: event
#        event_type: telegram_callback
#        event_data:
#          data: '/armaway'
#    action:
#      - service: alarm_control_panel.alarm_arm_away
#        data:
#          entity_id: alarm_control_panel.home_alarm
#          code: !secret alarm_code
#
## Alarm Automation - Suggest setting alarm whilst away, turn mirror monitor off
#  - id: 'armalarmsuggestionmirroroff'
#    alias: 'Arm alarm suggestion and mirror off'
#    trigger:
#      - platform: state
#        entity_id: group.people
#        to: 'not_home'
#    action:
#      - service: notify.telegram_notification
#        data:
#          message: 'Nobody home! Maybe arm the alarm?'
#          data:
#            inline_keyboard:
#              - "Arm Away:/armaway, Arm Home:/armhome"
#      - service: notify.telegram_notification_kelly
#        data:
#          message: 'Nobody home! Maybe arm the alarm?'
#          data:
#            inline_keyboard:
#              - "Arm Away:/armaway, Arm Home:/armhome"
#      - service: notify.mirror_pi_off
#        data:
#          message: 'Mirror off'
#
###########################################
##           OTHER AUTOMATIONS            #
###########################################
#
## Mirror Automation - Turn mirror monitor on when someone is home
#  - id: 'someonehomemirroron'
#    alias: 'Someone home mirror on'
#    trigger:
#      - platform: state
#        entity_id: group.people
#        to: 'home'
#    action:
#      - service: notify.mirror_pi_on
#        data:
#          message: 'Mirror on'
#
## Dashboard Automation - Turn dashboard off whilst I'm away
#  - id: 'trisnothomedashboardoff'
#    alias: 'Tris not home Dashboard off'
#    trigger:
#      - platform: state
#        entity_id: device_tracker.triss_iphone
#        to: 'not_home'
#    action:
#      - service: notify.dashboard_pi_off
#        data:
#          message: 'Dashboard off'      
#
## Dashboard Automation - Turn dashboard off whilst I'm away
#  - id: 'trishomedashboardon'
#    alias: 'Tris home Dashboard on'
#    trigger:
#      - platform: state
#        entity_id: device_tracker.triss_iphone
#        to: 'home'
#    action:
#      - service: notify.dashboard_pi_on
#        data:
#          message: 'Dashboard on'
#
## Turn Mirror Pi on
#  - id: 'alarmarmhomefromtelegram'
#    alias: 'Arm alarm home from Telegram'
#    trigger:
#      - platform: event
#        event_type: telegram_command
#        event_data:
#          command: '/mirroron'
#    action:
#      - service: notify.mirror_pi_on
#        data:
#          message: 'Mirror on'
#
## Turn Mirror Pi off
#  - id: 'alarmarmhomefromtelegram'
#    alias: 'Arm alarm home from Telegram'
#    trigger:
#      - platform: event
#        event_type: telegram_command
#        event_data:
#          command: '/mirroroff'
#    action:
#      - service: notify.mirror_pi_off
#        data:
#          message: 'Mirror off'
#
## Turn Mirror Pi on
#  - id: 'alarmarmhomefromtelegram'
#    alias: 'Arm alarm home from Telegram'
#    trigger:
#      - platform: event
#        event_type: telegram_command
#        event_data:
#          command: '/dashboardon'
#    action:
#      - service: notify.dashboard_pi_on
#        data:
#          message: 'Dashboard on'
#
## Turn Mirror Pi off
#  - id: 'alarmarmhomefromtelegram'
#    alias: 'Arm alarm home from Telegram'
#    trigger:
#      - platform: event
#        event_type: telegram_command
#        event_data:
#          command: '/dashboardoff'
#    action:
#      - service: notify.dashboard_pi_off
#        data:
#          message: 'Dashboard off'
#
#
## Test Telegram notification of boot
#  - id: 'telegramboot'
#    alias: 'Telegram bot to notify on boot'
#    trigger:
#    - event: start
#      platform: homeassistant
#    condition: []
#    action:
#    - service: notify.telegram_notification
#      data:
#        message: 'Home Assistant on Pi booted'
